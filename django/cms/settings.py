"""
Django settings for cms project.

Generated by 'django-admin startproject' using Django 3.1.

For more information on this file, see
https://docs.djangoproject.com/en/3.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.1/ref/settings/
"""
import os

from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve(strict=True).parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.environ.get('DJANGO_ENV_SECRET_KEY'),

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = bool(int(os.environ.get('DJANGO_ENV_DEBUG', False)))

ALLOWED_HOSTS = ['localhost', '.rahtiapp.fi', '.csc.fi']


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework',
    'corsheaders',
    'apis.apps.ApisConfig',
    'contentapp',
    'livereload',
    'bootstrap4',
    'ckeditor',
    'ckeditor_uploader',
    'ordered_model'
]

MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

MIDDLEWARE_CLASSES = (
    'livereload.middleware.LiveReloadScript',
)

REST_FRAMEWORK = {
    # Use Django's standard `django.contrib.auth` permissions,
    # or allow read-only access for unauthenticated users.
    'DEFAULT_PERMISSION_CLASSES': [
        'rest_framework.permissions.DjangoModelPermissionsOrAnonReadOnly'
    ]
}

CORS_ALLOWED_ORIGINS = [
    "http://localhost:4200",
    "http://localhost:8080",
    "https://researchfi-test.rahtiapp.fi",
    "https://researchfi-test-en.rahtiapp.fi",
    "https://researchfi-test-sv.rahtiapp.fi",
    "https://researchfi-releasetest.rahtiapp.fi",
    "https://researchfi-production-staging.rahtiapp.fi",
    "https://tiedejatutkimus.fi",
    "https://forskning.fi",
    "https://research.fi",
]

ROOT_URLCONF = 'cms.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },

    },
]

WSGI_APPLICATION = 'cms.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.1/ref/settings/#databases

DATABASES = {
    ### sqlite3
    #'default': {
    #    'ENGINE': 'django.db.backends.sqlite3',
    #    'NAME': BASE_DIR / 'db.sqlite3',
    #},

    ### PostgreSQL
    'default': {
        'ENGINE': 'django.db.backends.postgresql_psycopg2',
        'HOST': os.environ.get('DJANGO_ENV_DATABASE_HOST'),
        'PORT': os.environ.get('DJANGO_ENV_DATABASE_PORT'),
        'NAME': os.environ.get('DJANGO_ENV_DATABASE_NAME'),
        'USER': os.environ.get('DJANGO_ENV_DATABASE_USER'),
        'PASSWORD': os.environ.get('DJANGO_ENV_DATABASE_PASSWORD'),
    }
}


# Password validation
# https://docs.djangoproject.com/en/3.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.1/howto/static-files/

STATIC_URL = os.environ.get('DJANGO_ENV_STATIC_URL')
STATIC_ROOT = '/cmsvolume/static/'

STATICFILES_DIRS = (
    os.path.join(BASE_DIR, 'base/static/'),
    os.path.join(BASE_DIR, 'contentapp/static/'),
)

#CKEditor settings

CKEDITOR_UPLOAD_PATH = 'uploads/'
MEDIA_URL = os.environ.get('DJANGO_ENV_MEDIA_URL')
MEDIA_ROOT = '/cmsvolume/media/'


#Login settings

LOGIN_REDIRECT_URL = '/'

# Import local settings, if defined.
# Local settings can be used to overwrite values in development and testing environments.
try:
    from .local_settings import *
except ImportError:
    pass